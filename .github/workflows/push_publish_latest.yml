name: Publish latest

on:
  push:
    branches:
      - "release/latest"

env:
  NODE_VERSION: 20.x

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check Version
        id: version
        uses: cpdevtools/action-versions@latest
        with:
          failInvalidCanCreate: true

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 9.14.2
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
          registry-url: https://npm.pkg.github.com/
          always-auth: true
          scope: ${{ github.repository_owner }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Publish Libraries
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NODE_AUTH_TOKEN: ${{ github.token }}
        run: pnpm run release

      - uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: "https://registry.npmjs.org"
          scope: ${{ github.repository_owner }}

      - name: Publish Libraries to Npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN  }}
        run: pnpm run npm:release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.version.outputs.targetVersion }}
          release_name: Release Version ${{ steps.version.outputs.targetVersion }}
          body: |
            Generated Release v${{ steps.version.outputs.targetVersion }}
          draft: false
          prerelease: ${{ steps.version.outputs.targetIsPrerelease }}

      - name: Create tags
        uses: cpdevtools/action-versions@v0.4
        with:
          createTags: all
